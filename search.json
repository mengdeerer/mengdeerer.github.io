[{"title":"Hello World","url":"/2024/01/18/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.<br><span id=\"more\"></span></p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"computer network from 0 to 0","url":"/2024/01/21/computer-network-from-0-to-0/","content":"<p>计算机网络从入门到放弃</p>\n<hr>\n<span id=\"more\"></span>\n<h1 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h1><h2 id=\"tcp-ip-五层原理结构\"><a href=\"#tcp-ip-五层原理结构\" class=\"headerlink\" title=\"tcp/ip 五层原理结构\"></a>tcp/ip 五层原理结构</h2><ul>\n<li>应用层: http</li>\n<li>传输层: tcp udp</li>\n<li>网络层: ip</li>\n<li>数据链路层: 光纤</li>\n<li>物理层：wifi <blockquote>\n<p>服务垂直，协议水平</p>\n</blockquote>\n</li>\n</ul>\n<p><img src=\"/2024/01/21/computer-network-from-0-to-0/20240121_153513.jpg\" alt></p>\n","tags":["网络","学习"]},{"title":"how to build your own blog","url":"/2024/01/20/how-to-build-your-own-blog/","content":"<p><strong>教程，启动!</strong></p>\n<hr>\n<span id=\"more\"></span>\n<h1 id=\"选择服务器和域名\"><a href=\"#选择服务器和域名\" class=\"headerlink\" title=\"选择服务器和域名\"></a>选择服务器和域名</h1><p><img src=\"/2024/01/20/how-to-build-your-own-blog/beian.png\" alt=\"beian\"><br>为了避免实名认证和备案的繁琐流程，选择境外服务器和域名提供商</p>\n<h2 id=\"服务器\"><a href=\"#服务器\" class=\"headerlink\" title=\"服务器\"></a>服务器</h2><h3 id=\"供应商\"><a href=\"#供应商\" class=\"headerlink\" title=\"供应商\"></a>供应商</h3><p>选择阿里云，正好用上上次云工开物送的300代金券和三折优惠券,选择新加披地区2核2G+100G硬盘，一年下来只需0元<br>除此以外还可以直接选择境外供应商，例如racknerd，vultr等，总之只要大于1核1G就够用了，毕竟搭了博客也没什么人看</p>\n<h3 id=\"系统\"><a href=\"#系统\" class=\"headerlink\" title=\"系统\"></a>系统</h3><p>选择Ubuntu22.04系统</p>\n<h2 id=\"域名\"><a href=\"#域名\" class=\"headerlink\" title=\"域名\"></a>域名</h2><p>建议在境外域名站购买一个域名，大概一刀一年，为了便宜可以选择.xyz .top etc.</p>\n<h3 id=\"域名解析\"><a href=\"#域名解析\" class=\"headerlink\" title=\"域名解析\"></a>域名解析</h3><p>使用cloudfare解析，提供CDN防护，大致流程为</p>\n<ul>\n<li>注册并登录cloudfare</li>\n<li>将所购买域名的DNS解析服务器更改为cloudfare提供的DNS服务器<blockquote>\n<p>通常可以在购买域名的管理界面的<strong>DNS修改</strong>选项中修改</p>\n</blockquote>\n</li>\n</ul>\n<h1 id=\"服务器端配置\"><a href=\"#服务器端配置\" class=\"headerlink\" title=\"服务器端配置\"></a>服务器端配置</h1><h2 id=\"开放端口\"><a href=\"#开放端口\" class=\"headerlink\" title=\"开放端口\"></a>开放端口</h2><p>在服务器供应商管理界面防火墙（或入站规则等类似说法）设置处开放22端口（ssh使用），80端口（http服务使用），443端口（https使用）</p>\n<h2 id=\"ssh\"><a href=\"#ssh\" class=\"headerlink\" title=\"ssh\"></a>ssh</h2><p>win端通过powershell远程登录服务器（确保服务器已经开放22端口）<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">ssh root@111.111.111.111 <span class=\"comment\">#111.111.111.111为你服务器的公网</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"下载必备软件\"><a href=\"#下载必备软件\" class=\"headerlink\" title=\"下载必备软件\"></a>下载必备软件</h2><p>下载git<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt install git</span><br></pre></td></tr></table></figure><br>下载nodejs<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt install nodejs</span><br></pre></td></tr></table></figure><br>下载nginx<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt install nginx</span><br></pre></td></tr></table></figure><br>检查是否成功下载<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git -v</span><br><span class=\"line\">node -v</span><br><span class=\"line\">npm -v</span><br><span class=\"line\">nginx -v</span><br></pre></td></tr></table></figure><br>若成功显示版本号则安装成功，否则请尝试<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt upgrade</span><br></pre></td></tr></table></figure><br>再次进行下载</p>\n<h2 id=\"创建git用户\"><a href=\"#创建git用户\" class=\"headerlink\" title=\"创建git用户\"></a>创建git用户</h2><p>添加用户并按提示设置密码<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">adduser git</span><br></pre></td></tr></table></figure><br>修改权限<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">chmod</span> 740 /etc/sudoers</span><br></pre></td></tr></table></figure><br>修改文件<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">vim /etc/sudoers <span class=\"comment\">#vim打开要修改的文件</span></span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>进入后按i键由命令模式切换到编辑模式。找到 root ALL=(ALL) ALL，在下面添加一行 <strong>git ALL=(ALL) ALL</strong>。修改完成后，先按Esc由编辑模式切换到命令模式，再输入:wq命令保存并退出编辑器。<br>改回权限<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">chmod</span> 400 /etc/sudoers</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"为git用户配置免密登录\"><a href=\"#为git用户配置免密登录\" class=\"headerlink\" title=\"为git用户配置免密登录\"></a>为git用户配置免密登录</h3><p>使用git用户免密公钥登录服务器的原理是：在本地计算机生成一个公钥文件和一个秘钥文件（类似于一个钥匙配一把锁)，然后将公钥文件上传到云服务器，并将公钥安装到authorized_keys列表中去（即：将公钥文件的内容拷贝到authorized_keys文件中去）。这样本地计算机便可以通过ssh方式免密连接我们的云服务器了。</p>\n</blockquote>\n<p>在服务器端将登陆用户切换到git用户，然后在~目录(根目录)下创建.ssh文件夹，用来存放公钥。<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">su git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> .ssh</span><br></pre></td></tr></table></figure><br>在本地计算机桌面右键打开GitBash(或Powershell)，在本地生成公钥/私钥对。<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\"><span class=\"built_in\">cd</span> .ssh</span><br><span class=\"line\">ssh-keygen</span><br></pre></td></tr></table></figure><br>接下来，碰见系统询问就直接按回车键。此时便会在本地计算机的用户根目录（C:\\Users\\&lt;你的windows用户名&gt;）下自动生成 .ssh（隐藏）文件夹，并在其中创建两个文件，分别为：id_rsa（私钥）和id_rsa.pub（公钥）。</p>\n<p>在本地计算机上给私钥设置权限。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">chmod</span> 700 ~/.ssh</span><br><span class=\"line\"><span class=\"built_in\">chmod</span> 600 ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure>\n<p>进入到.ssh文件夹中，右键单击在terminal中打开，利用scp将公钥传输到服务器root文件夹中<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">scp id_rsa.pub root@111.111.111.111:/root</span><br></pre></td></tr></table></figure><br>进入服务器，在服务器中<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/.ssh</span><br><span class=\"line\"><span class=\"built_in\">cp</span> id_rsa.pub authorized_keys</span><br><span class=\"line\"><span class=\"built_in\">cat</span> id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><br>设置权限<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">chmod</span> 600 ~/.ssh/authorized_keys</span><br><span class=\"line\"><span class=\"built_in\">chmod</span> 700 ~/.ssh</span><br></pre></td></tr></table></figure><br>大功告成，以后登录git用户就不用输入密码了<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">ssh git@111.111.111.111</span><br></pre></td></tr></table></figure><br>即可进入</p>\n<h2 id=\"在服务器端配置git仓库\"><a href=\"#在服务器端配置git仓库\" class=\"headerlink\" title=\"在服务器端配置git仓库\"></a>在服务器端配置git仓库</h2><p>新建文件夹存放blog<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> -p /home/www/hexo</span><br></pre></td></tr></table></figure><br>配置hook文件<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\">git init --bare hexo.git</span><br><span class=\"line\">vim ~/hexo.git/hooks/post-receive</span><br></pre></td></tr></table></figure><br> 进入后按i键由命令模式切换到编辑模式。输入： <strong>git —work-tree=/home/www/hexo —git-dir=/home/git/hexo.git checkout -f</strong>完成以上修改后，先按Esc由编辑模式切换到命令模式，再输入:wq命令保存并退出编辑器。<br>授予hook文件可执行权限。<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">chmod</span> +x ~/hexo.git/hooks/post-receive</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\">sudo <span class=\"built_in\">chmod</span> -R 777 /home/www/hexo</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"配置nginx\"><a href=\"#配置nginx\" class=\"headerlink\" title=\"配置nginx\"></a>配置nginx</h2><p>之前已经安装了nginx，查找安装的nginx在哪<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">whereis nginx</span><br></pre></td></tr></table></figure><br>若终端显示<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">nginx: /usr/sbin/nginx /usr/lib/nginx /etc/nginx /usr/share/nginx /usr/share/man/man8/nginx.8.gz</span><br></pre></td></tr></table></figure><br>则nginx配置文件在/etc/nginx中<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /etc/nginx</span><br><span class=\"line\">vim nginx.conf</span><br></pre></td></tr></table></figure><br>在http{}中添加server{}如下<br><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">               listen 80;</span><br><span class=\"line\">               listen [::]:80;</span><br><span class=\"line\">               root /home/www/hexo; # 修改的地方</span><br><span class=\"line\">               server_name morgandesign.top 111.111.111.111; #修改server_name为你的域名，可以加上服务器公网ip,这样IP，域名均可访问</span><br><span class=\"line\">               location / &#123;</span><br><span class=\"line\">            # First attempt to serve request as file, then</span><br><span class=\"line\">            # as directory, then fall back to displaying a 404.</span><br><span class=\"line\">                       try_files $uri $uri/ =404;</span><br><span class=\"line\">                       &#125;</span><br><span class=\"line\">       &#125;</span><br></pre></td></tr></table></figure><br>先按Esc由编辑模式切换到命令模式，再输入:wq命令保存并退出编辑器。<br>重启nginx服务<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">service nginx restart</span><br></pre></td></tr></table></figure><br>浏览器输入 111.111.111.111:80 查看是否有nginx 404界面。</p>\n<h1 id=\"windows端配置\"><a href=\"#windows端配置\" class=\"headerlink\" title=\"windows端配置\"></a>windows端配置</h1><h2 id=\"安装必备软件\"><a href=\"#安装必备软件\" class=\"headerlink\" title=\"安装必备软件\"></a>安装必备软件</h2><p>安装nodejs</p>\n<ul>\n<li>官网下载即可</li>\n</ul>\n<p>安装git</p>\n<ul>\n<li>官网下载即可</li>\n</ul>\n<p>安装hexo</p>\n<p>在D盘新建MyHexoBlogs文件夹用来存放个人博客，进入该文件夹，右键打开Git Bash，使用 npm 安装 Hexo。<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"hexo配置\"><a href=\"#hexo配置\" class=\"headerlink\" title=\"hexo配置\"></a>hexo配置</h2><p>Hexo安装完成后，在MyHexoBlogs文件夹下新建myblogs项目，并对其进行初始化。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo init myblogs</span><br><span class=\"line\"><span class=\"built_in\">cd</span> myblogs</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<p>此时，会在MyHexoBlogs文件夹下新建myblogs文件夹，并在其内部生成相应的项目文件。<br>在myblogs文件夹下启动hexo服务。<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure><br>此时在本地打开浏览器，通过 <a href=\"http://localhost:4000/\">http://localhost:4000/</a> 便可访问基于Hexo的个人博客主页了。<br>在myblogs文件夹中打开_config.yml,修改其中deploy参数为<br><figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">git@111.111.111.111:home/git/hexo.git</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure><br>在本地计算机安装插件: hexo-deployer-git 和 hexo-server。在myblogs文件夹下右键打开GitBash，输入以下命令：<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\">npm install hexo-server</span><br></pre></td></tr></table></figure><br>_这俩插件的作用分别是使用Git自动部署，和hexo本地简单的服务器。_<br>在本地计算机配置Git全局变量。 输入以下命令：<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global user.email <span class=\"string\">&quot;xxxxxxxxxx@xx.com&quot;</span></span><br><span class=\"line\">git config --global user.name “xxxx”</span><br></pre></td></tr></table></figure><br>使用Hexo生成、发布个人博客。<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo clean &amp;&amp; hexo g -d</span><br></pre></td></tr></table></figure><br>此时，便可以通过浏览器访问<a href=\"https://link.zhihu.com/?target=http%3A//xxx.xxx.xxx.xxx%3A80/\">http://xxx.xxx.xxx.xxx:80/</a> 进入hexo我的博客主页了。</p>\n<h2 id=\"域名解析-1\"><a href=\"#域名解析-1\" class=\"headerlink\" title=\"域名解析\"></a>域名解析</h2><p>在cloudfare中，添加DNS记录<br>类型为A，名称为@，IP为你的公网IP，打开代理状态<br>静待10min,尝试用域名打开你的blog</p>\n<h1 id=\"完结撒花\"><a href=\"#完结撒花\" class=\"headerlink\" title=\"完结撒花\"></a>完结撒花</h1><p><strong><em>仅以此纪念我的三个儿子</em></strong><br>huahuahuahuahuahua</p>\n","tags":["blog","教程"]},{"title":"test","url":"/2024/01/19/test/","content":"<h1 id=\"达达达达哒\"><a href=\"#达达达达哒\" class=\"headerlink\" title=\"达达达达哒\"></a>达达达达哒</h1><h1 id=\"达达达达哒-1\"><a href=\"#达达达达哒-1\" class=\"headerlink\" title=\"达达达达哒\"></a>达达达达哒</h1><h1 id=\"达达达达哒-2\"><a href=\"#达达达达哒-2\" class=\"headerlink\" title=\"达达达达哒\"></a>达达达达哒</h1><span id=\"more\"></span>\n<p><img src=\"/2024/01/19/test/me.png\" alt=\"me.png|225\"><br>hihihi<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /home/www/hexo</span><br></pre></td></tr></table></figure></p>\n<script type=\"math/tex; mode=display\">\n\\alpha+\\beta</script><ul>\n<li>[ ] 你好<blockquote>\n<p>hihihi</p>\n</blockquote>\n</li>\n<li>hi</li>\n<li>hi</li>\n<li>hello <script type=\"math/tex; mode=display\">\n\\begin{equation}\\label{eq1}\ne=mc^2\n\\end{equation}</script></li>\n</ul>\n","tags":["达"]},{"title":"vim basic command","url":"/2024/01/22/vim-basic-command/","content":"<p>记点根本就记不住的命令</p>\n<hr>\n<span id=\"more\"></span>\n<p>替换  :s/^/ /<br>重复执行 .</p>\n","tags":["vim","keep"]}]