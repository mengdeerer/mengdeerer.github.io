[{"title":"course_电子工程数理方法","url":"/2024/01/19/course-%E7%94%B5%E5%AD%90%E5%B7%A5%E7%A8%8B%E6%95%B0%E7%90%86%E6%96%B9%E6%B3%95/","content":"<h1 id=\"电子工程数理方法\">电子工程数理方法</h1>\r\n<span id=\"more\"></span>\r\n<h1 id=\"解析函数\">解析函数</h1>\r\n<h2 id=\"极限\">极限</h2>\r\n<ol type=\"1\">\r\n<li><p><span class=\"math display\">\\[\r\n\\Delta z \\rightarrow 0,任意路径均可\\\\as\\ follows\\\\ \\Delta x=0,\\Delta y\r\n\\rightarrow 0 \\\\ \\Delta y=0,\\Delta x \\rightarrow 0\r\n\\]</span></p></li>\r\n<li><p>拆分为实部虚部，充分条件</p></li>\r\n</ol>\r\n<hr>\r\n<h2 id=\"连续性\">连续性</h2>\r\n<ol type=\"1\">\r\n<li>拆分为实部虚部，分别连续则连续，充要条件</li>\r\n<li>有界闭域连续，<span class=\"math inline\">\\(\\lvert f(z)\r\n\\rvert\\)</span> 必有最大值和最小值</li>\r\n</ol>\r\n<hr>\r\n<h2 id=\"导数\">导数</h2>\r\n<ol type=\"1\">\r\n<li><p>左右导数存在且相等==可导</p></li>\r\n<li><p>两个函数：</p>\r\n<p><span class=\"math display\">\\[\r\nIm\\ z\\ 处处均不可导 \\\\ \\lvert z \\rvert 只有z=0时可导\r\n\\]</span></p></li>\r\n<li><p>不可拆分为实部虚部，即使均可导整体可能也不可导</p></li>\r\n<li><p>基本公式，四则运算，链式法则，反函数求导均不变</p>\r\n<ol type=\"1\">\r\n<li></li>\r\n</ol>\r\n<p><span class=\"math display\">\\[\r\n(C)&#39;=0 \\\\(\\ z^{n})&#39;=nz^{n-1}\r\n\\]</span></p></li>\r\n</ol>\r\n<hr>\r\n<h2 id=\"微分\">微分</h2>\r\n<ol type=\"1\">\r\n<li>可导==可微 ⇒连续</li>\r\n<li></li>\r\n</ol>\r\n<p><span class=\"math display\">\\[\r\ndw=f&#39;(z)dz\r\n\\]</span></p>\r\n<hr>\r\n<h2 id=\"解析\">解析：</h2>\r\n<p>z0处解析：在z0及其邻域内处处可导，注意只在一个点可导不算解析</p>\r\n<p>在区域D内解析：在D内每一点解析（称为解析函数，全纯函数，正则函数）</p>\r\n<p>若在z0不解析，z0称为奇点（不在定义域内也可）</p>\r\n<p>解析函数经四则运算，复合函数，反函数仍是解析函数</p>\r\n<hr>\r\n<h2 id=\"函数解析的充分条件\">函数解析的充分条件</h2>\r\n<ol type=\"1\">\r\n<li>可导的必要条件：在z0处可导，则u,v一阶导数存在，且满足柯西黎曼条件（cauchy-riemann）</li>\r\n<li></li>\r\n</ol>\r\n<p><span class=\"math display\">\\[\r\n\\frac{\\partial u}{\\partial x}=\\frac{\\partial v }{\\partial y}\\\\\r\n\\frac{\\partial u}{\\partial y}=-\\frac{\\partial v }{\\partial\r\nx}\\\\f&#39;(z)=\\frac{\\partial u}{\\partial x}+i\\frac{\\partial v}{\\partial\r\nx}\r\n\\]</span></p>\r\n<p>3.可导的充分条件：u,v可微，而且满足CR方程</p>\r\n<p>推论：u，v一阶偏导连续，满足CR方程，则 f 可导</p>\r\n<p>函数在区域D内解析的充要条件：u，v在D内具有一阶连续偏导数，并满足柯西黎曼条件</p>\r\n<p>判断解析函数是否为常数条件：</p>\r\n<ol type=\"1\">\r\n<li>函数在区域内解析且导数恒为0</li>\r\n<li>解析函数的实部虚部，模或辐角有一个恒为常数（利用柯西黎曼条件推导剩余的为0）</li>\r\n<li>解析函数的共轭在区域内解析</li>\r\n</ol>\r\n<hr>\r\n<h2 id=\"调和函数\">调和函数</h2>\r\n<ol type=\"1\">\r\n<li>调和函数定义：二元实函数在区域D内具有连续的二阶偏导，且满足二维拉普拉斯方程：</li>\r\n</ol>\r\n<p><span class=\"math display\">\\[\r\n\\Delta^2u=\\frac{\\partial^2 u}{\\partial x^2}+\\frac{\\partial^2 u}{\\partial\r\ny^2}=0\r\n\\]</span></p>\r\n<hr>\r\n<h2 id=\"调和函数和解析函数的关系\">调和函数和解析函数的关系</h2>\r\n<aside>\r\n<p>💡 解析函数具有任意阶连续偏导数</p>\r\n</aside>\r\n<ol type=\"1\">\r\n<li>若f(z)为D内解析函数，则u,v均为D内的调和函数</li>\r\n<li>u，v为D内调和函数，若uv满足CR,则称v为u的共轭解析函数，-u为v的共轭解析函数</li>\r\n</ol>\r\n<p>解析函数可推出：</p>\r\n<ol type=\"1\">\r\n<li>D内可导</li>\r\n<li>u，vD内可微，满足CR</li>\r\n<li>u，v D内一阶偏导连续，CR</li>\r\n<li>D内v为u的共轭调和函数</li>\r\n</ol>\r\n<blockquote>\r\n<p>一阶偏导连续则可微，可微不一定满足一阶偏导连续</p>\r\n</blockquote>\r\n<p>若u为单连通区域（即内部无孔）D内的调和函数，则可找到他的共轭调和函数v是的f=u+iv成为D内解析函数，且这样的v有无穷个</p>\r\n<p>![[Notes_230927_184824_48a.jpg]]</p>\r\n<p>解析函数实部求虚部方法：</p>\r\n<ol type=\"1\">\r\n<li>偏积分法</li>\r\n<li>曲线积分法（取任意路径积分值相同）</li>\r\n<li>全微分法</li>\r\n<li>导函数法（ux,uy→f’→x换成z,y换成0→积分）</li>\r\n</ol>\r\n<hr>\r\n<h2 id=\"正交曲线族\">正交曲线族</h2>\r\n<p>若f=u+iv为D内的解析函数且f’不等于0，则u=c1,v=c2为D内的两组正交曲线族</p>\r\n<h1 id=\"laplace-trans\">Laplace trans</h1>\r\n<figure>\r\n<img src=\"/2024/01/19/course-%E7%94%B5%E5%AD%90%E5%B7%A5%E7%A8%8B%E6%95%B0%E7%90%86%E6%96%B9%E6%B3%95/Courses/电子工程数理方法/Untitled.png\" alt=\"Untitled\">\r\n<figcaption aria-hidden=\"true\">Untitled</figcaption>\r\n</figure>\r\n<h1 id=\"列表积分法\">列表积分法</h1>\r\n<p><a href=\"https://zhuanlan.zhihu.com/p/81024770?utm_id=0\">分部积分法→列表积分法</a></p>\r\n<p>收敛</p>\r\n<p>an不趋近于0</p>\r\n<p>绝对收敛-》条件收敛</p>\r\n<p>分散开讨论</p>\r\n"},{"title":"Hello World","url":"/2024/01/18/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very\r\nfirst post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for\r\nmore info. If you get any problems when using Hexo, you can find the\r\nanswer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or\r\nyou can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>. <span id=\"more\"></span>\r\n## Quick Start</p>\r\n<h3 id=\"create-a-new-post\">Create a new post</h3>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\r\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\r\n<h3 id=\"run-server\">Run server</h3>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\r\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\r\n<h3 id=\"generate-static-files\">Generate static files</h3>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\r\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\r\n<h3 id=\"deploy-to-remote-sites\">Deploy to remote sites</h3>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\r\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\r\n"},{"title":"test","url":"/2024/01/19/test/","content":"<h1 id=\"达达达达哒\">达达达达哒</h1>\r\n<h1 id=\"达达达达哒-1\">达达达达哒</h1>\r\n<h1 id=\"达达达达哒-2\">达达达达哒</h1>\r\n<h1 id=\"达达达达哒-3\">达达达达哒</h1>\r\n<h1 id=\"达达达达哒-4\">达达达达哒</h1>\r\n<h1 id=\"达达达达哒-5\">达达达达哒</h1>\r\n<h1 id=\"达达达达哒-6\">达达达达哒</h1>\r\n<span id=\"more\"></span>\r\n<p><img src=\"/2024/01/19/test/me.png\" alt=\"me.png|225\"> hihihi <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /home/www/hexo</span><br></pre></td></tr></table></figure> <span class=\"math display\">\\[\\alpha\\]</span> - [ ] 你好 &gt;hihihi - hi - hi -\r\nhello</p>\r\n","tags":["达"]},{"title":"how to build your own blog","url":"/2024/01/20/how-to-build-your-own-blog/","content":"<p><strong>教程，启动!</strong> &gt;富强民主文明和谐\r\n&gt;自由平等公正法治 &gt;爱国敬业诚信友善</p>\r\n<span id=\"more\"></span>\r\n<h1 id=\"选择服务器和域名\">选择服务器和域名</h1>\r\n<p><img src=\"/2024/01/20/how-to-build-your-own-blog/beian.png\" alt=\"beian\">\r\n为了避免实名认证和备案的繁琐流程，选择境外服务器和域名提供商 ## 服务器\r\n### 供应商\r\n选择阿里云，正好用上上次云工开物送的300代金券和三折优惠券,选择新加披地区2核2G+100G硬盘，一年下来只需0元\r\n除此以外还可以直接选择境外供应商，例如racknerd，vultr等，总之只要大于1核1G就够用了，毕竟搭了博客也没什么人看\r\n### 系统 选择Ubuntu22.04系统</p>\r\n<h2 id=\"域名\">域名</h2>\r\n<p>建议在境外域名站购买一个域名，大概一刀一年，为了便宜可以选择.xyz .top\r\netc. ### 域名解析 使用cloudfare解析，提供CDN防护，大致流程为 -\r\n注册并登录cloudfare -\r\n将所购买域名的DNS解析服务器更改为cloudfare提供的DNS服务器\r\n&gt;通常可以在购买域名的管理界面的<strong>DNS修改</strong>选项中修改</p>\r\n<h1 id=\"服务器端配置\">服务器端配置</h1>\r\n<h2 id=\"开放端口\">开放端口</h2>\r\n<p>在服务器供应商管理界面防火墙（或入站规则等类似说法）设置处开放22端口（ssh使用），80端口（http服务使用），443端口（https使用）\r\n## ssh win端通过powershell远程登录服务器（确保服务器已经开放22端口）\r\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">ssh root@111.111.111.111 <span class=\"comment\">#111.111.111.111为你服务器的公网</span></span><br></pre></td></tr></table></figure></p>\r\n<h2 id=\"下载必备软件\">下载必备软件</h2>\r\n<p>下载git <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt install git</span><br></pre></td></tr></table></figure> 下载nodejs <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt install nodejs</span><br></pre></td></tr></table></figure> 下载nginx\r\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt install nginx</span><br></pre></td></tr></table></figure> 检查是否成功下载 <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git -v</span><br><span class=\"line\">node -v</span><br><span class=\"line\">npm -v</span><br><span class=\"line\">nginx -v</span><br></pre></td></tr></table></figure>\r\n若成功显示版本号则安装成功，否则请尝试 <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt upgrade</span><br></pre></td></tr></table></figure> 再次进行下载</p>\r\n<h2 id=\"创建git用户\">创建git用户</h2>\r\n<p>添加用户并按提示设置密码 <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">adduser git</span><br></pre></td></tr></table></figure> 修改权限 <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">chmod</span> 740 /etc/sudoers</span><br></pre></td></tr></table></figure>\r\n修改文件 <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">vim /etc/sudoers <span class=\"comment\">#vim打开要修改的文件</span></span><br></pre></td></tr></table></figure> &gt;进入后按i键由命令模式切换到编辑模式。找到\r\nroot ALL=(ALL) ALL，在下面添加一行 <strong>git ALL=(ALL)\r\nALL</strong>。修改完成后，先按Esc由编辑模式切换到命令模式，再输入:wq命令保存并退出编辑器。\r\n改回权限 <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">chmod</span> 400 /etc/sudoers</span><br></pre></td></tr></table></figure> ### 为git用户配置免密登录\r\n使用git用户免密公钥登录服务器的原理是：在本地计算机生成一个公钥文件和一个秘钥文件（类似于一个钥匙配一把锁)，然后将公钥文件上传到云服务器，并将公钥安装到authorized_keys列表中去（即：将公钥文件的内容拷贝到authorized_keys文件中去）。这样本地计算机便可以通过ssh方式免密连接我们的云服务器了。</p>\r\n<p>在服务器端将登陆用户切换到git用户，然后在~目录(根目录)下创建.ssh文件夹，用来存放公钥。\r\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">su git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> .ssh</span><br></pre></td></tr></table></figure>\r\n在本地计算机桌面右键打开GitBash(或Powershell)，在本地生成公钥/私钥对。\r\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\"><span class=\"built_in\">cd</span> .ssh</span><br><span class=\"line\">ssh-keygen</span><br></pre></td></tr></table></figure>\r\n接下来，碰见系统询问就直接按回车键。此时便会在本地计算机的用户根目录（C:&lt;你的windows用户名&gt;）下自动生成\r\n.ssh（隐藏）文件夹，并在其中创建两个文件，分别为：id_rsa（私钥）和id_rsa.pub（公钥）。</p>\r\n<p>在本地计算机上给私钥设置权限。</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">chmod</span> 700 ~/.ssh</span><br><span class=\"line\"><span class=\"built_in\">chmod</span> 600 ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure>\r\n<p>进入到.ssh文件夹中，右键单击在terminal中打开，利用scp将公钥传输到服务器root文件夹中\r\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">scp id_rsa.pub root@111.111.111.111:/root</span><br></pre></td></tr></table></figure> 进入服务器，在服务器中 <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/.ssh</span><br><span class=\"line\"><span class=\"built_in\">cp</span> id_rsa.pub authorized_keys</span><br><span class=\"line\"><span class=\"built_in\">cat</span> id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure> 设置权限\r\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">chmod</span> 600 ~/.ssh/authorized_keys</span><br><span class=\"line\"><span class=\"built_in\">chmod</span> 700 ~/.ssh</span><br></pre></td></tr></table></figure> 大功告成，以后登录git用户就不用输入密码了 <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">ssh git@111.111.111.111</span><br></pre></td></tr></table></figure>\r\n即可进入</p>\r\n<h2 id=\"在服务器端配置git仓库\">在服务器端配置git仓库</h2>\r\n<p>新建文件夹存放blog <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> -p /home/www/hexo</span><br></pre></td></tr></table></figure> 配置hook文件 <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\">git init --bare hexo.git</span><br><span class=\"line\">vim ~/hexo.git/hooks/post-receive</span><br></pre></td></tr></table></figure>\r\n 进入后按i键由命令模式切换到编辑模式。输入： <strong>git\r\n--work-tree=/home/www/hexo --git-dir=/home/git/hexo.git checkout\r\n-f</strong>完成以上修改后，先按Esc由编辑模式切换到命令模式，再输入:wq命令保存并退出编辑器。\r\n授予hook文件可执行权限。 <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">chmod</span> +x ~/hexo.git/hooks/post-receive</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\">sudo <span class=\"built_in\">chmod</span> -R 777 /home/www/hexo</span><br></pre></td></tr></table></figure> ## 配置nginx</p>\r\n<p>之前已经安装了nginx，查找安装的nginx在哪 <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">whereis nginx</span><br></pre></td></tr></table></figure> 若终端显示\r\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">nginx: /usr/sbin/nginx /usr/lib/nginx /etc/nginx /usr/share/nginx /usr/share/man/man8/nginx.8.gz</span><br></pre></td></tr></table></figure> 则nginx配置文件在/etc/nginx中 <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /etc/nginx</span><br><span class=\"line\">vim nginx.conf</span><br></pre></td></tr></table></figure>\r\n在http{}中添加server{}如下 <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">               listen 80;</span><br><span class=\"line\">               listen [::]:80;</span><br><span class=\"line\">               root /home/www/hexo; # 修改的地方</span><br><span class=\"line\">               server_name morgandesign.top 111.111.111.111; #修改server_name为你的域名，可以加上服务器公网ip,这样IP，域名均可访问</span><br><span class=\"line\">               location / &#123;</span><br><span class=\"line\">            # First attempt to serve request as file, then</span><br><span class=\"line\">            # as directory, then fall back to displaying a 404.</span><br><span class=\"line\">                       try_files $uri $uri/ =404;</span><br><span class=\"line\">                       &#125;</span><br><span class=\"line\">       &#125;</span><br></pre></td></tr></table></figure>\r\n先按Esc由编辑模式切换到命令模式，再输入:wq命令保存并退出编辑器。\r\n重启nginx服务 <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">service nginx restart</span><br></pre></td></tr></table></figure> 浏览器输入 111.111.111.111:80\r\n查看是否有nginx 404界面。</p>\r\n<h1 id=\"windows端配置\">windows端配置</h1>\r\n<h2 id=\"安装必备软件\">安装必备软件</h2>\r\n<p>安装nodejs - 官网下载即可</p>\r\n<p>安装git - 官网下载即可</p>\r\n<p>安装hexo</p>\r\n<p>在D盘新建MyHexoBlogs文件夹用来存放个人博客，进入该文件夹，右键打开Git\r\nBash，使用 npm 安装 Hexo。 <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure> ## hexo配置\r\nHexo安装完成后，在MyHexoBlogs文件夹下新建myblogs项目，并对其进行初始化。</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo init myblogs</span><br><span class=\"line\"><span class=\"built_in\">cd</span> myblogs</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\r\n<p>此时，会在MyHexoBlogs文件夹下新建myblogs文件夹，并在其内部生成相应的项目文件。\r\n在myblogs文件夹下启动hexo服务。 <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\r\n此时在本地打开浏览器，通过 http://localhost:4000/\r\n便可访问基于Hexo的个人博客主页了。\r\n在myblogs文件夹中打开_config.yml,修改其中deploy参数为 <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">git@111.111.111.111:home/git/hexo.git</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\r\n在本地计算机安装插件: hexo-deployer-git 和\r\nhexo-server。在myblogs文件夹下右键打开GitBash，输入以下命令：\r\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\">npm install hexo-server</span><br></pre></td></tr></table></figure>\r\n<em>这俩插件的作用分别是使用Git自动部署，和hexo本地简单的服务器。</em>\r\n在本地计算机配置Git全局变量。 输入以下命令： <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global user.email <span class=\"string\">&quot;xxxxxxxxxx@xx.com&quot;</span></span><br><span class=\"line\">git config --global user.name “xxxx”</span><br></pre></td></tr></table></figure>\r\n使用Hexo生成、发布个人博客。 <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo clean &amp;&amp; hexo g -d</span><br></pre></td></tr></table></figure> 此时，便可以通过浏览器访问<a href=\"https://link.zhihu.com/?target=http%3A//xxx.xxx.xxx.xxx%3A80/\">http://xxx.xxx.xxx.xxx:80/</a> 进入hexo我的博客主页了。</p>\r\n<h2 id=\"域名解析\">域名解析</h2>\r\n<p>在cloudfare中，添加DNS记录\r\n类型为A，名称为@，IP为你的公网IP，打开代理状态\r\n静待10min,尝试用域名打开你的blog</p>\r\n<h1 id=\"完结撒花\">完结撒花</h1>\r\n<p>huahuahuahuahuahua</p>\r\n","tags":["blog","教程"]}]